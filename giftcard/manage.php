<?php
use WHMCS\Database\Capsule;

require_once __DIR__ . '/../../../init.php';
require_once __DIR__ . '/helpers.php';

if (!isset($_SESSION['adminid'])) {
    die("Access Denied");
}

$action = $_REQUEST['action'] ?? '';

try { $adminDirectory = \App::get_admin_folder_name(); } catch (\Exception $e) { $adminDirectory = 'admin'; }
$modulelink = '/' . $adminDirectory . '/addonmodules.php?module=giftcard';

check_token("WHMCS.admin.default");

if ($action === 'generate' && $_SERVER['REQUEST_METHOD'] === 'POST') {
    $whmcsAdminId = $_SESSION['adminid'];
    $quantity = (int)$_POST['quantity'];
    $value = (float)$_POST['value'];
    $currencyId = (int)$_POST['currency'];
    $rawDate = trim($_POST['expiry_date']);
    $expiryDate = !empty($rawDate) ? date('Y-m-d', strtotime($rawDate)) : null;
    if ($quantity > 0 && $quantity <= 500 && $value > 0) {
        for ($i = 0; $i < $quantity; $i++) {
            $newCode = 'GIFT-' . giftcard_helper_generate_segment() . '-' . giftcard_helper_generate_segment() . '-' . giftcard_helper_generate_segment();
            $cardId = Capsule::table('mod_giftcards')->insertGetId(['code' => $newCode, 'initial_value' => $value, 'current_balance' => $value, 'currency_id' => $currencyId, 'created_by_admin_id' => $whmcsAdminId, 'status' => 'Active', 'expiry_date' => $expiryDate, 'created_at' => date('Y-m-d H:i:s'), 'updated_at' => date('Y-m-d H:i:s')]);
            giftcard_helper_log_transaction($cardId, 'Admin Creation', $value, 'Card generated by admin.');
        }
    }
    header("Location: " . $modulelink . "&generatesuccess=1");
    exit;
}a<?php
use WHMCS\Database\Capsule;

require_once __DIR__ . '/../../../init.php';
require_once __DIR__ . '/helpers.php';

if (!isset($_SESSION['adminid'])) {
    die("Access Denied");
}

$action = $_REQUEST['action'] ?? '';

try { $adminDirectory = \App::get_admin_folder_name(); } catch (\Exception $e) { $adminDirectory = 'admin'; }
$modulelink = '/' . $adminDirectory . '/addonmodules.php?module=giftcard';

check_token("WHMCS.admin.default");

if ($action === 'generate' && $_SERVER['REQUEST_METHOD'] === 'POST') {
    $whmcsAdminId = $_SESSION['adminid'];
    $quantity = (int)$_POST['quantity'];
    $value = (float)$_POST['value'];
    $currencyId = (int)$_POST['currency'];
    $rawDate = trim($_POST['expiry_date']);
    $expiryDate = !empty($rawDate) ? date('Y-m-d', strtotime($rawDate)) : null;
    if ($quantity > 0 && $quantity <= 500 && $value > 0) {
        for ($i = 0; $i < $quantity; $i++) {
            $newCode = 'GIFT-' . giftcard_helper_generate_segment() . '-' . giftcard_helper_generate_segment() . '-' . giftcard_helper_generate_segment();
            $cardId = Capsule::table('mod_giftcards')->insertGetId(['code' => $newCode, 'initial_value' => $value, 'current_balance' => $value, 'currency_id' => $currencyId, 'created_by_admin_id' => $whmcsAdminId, 'status' => 'Active', 'expiry_date' => $expiryDate, 'created_at' => date('Y-m-d H:i:s'), 'updated_at' => date('Y-m-d H:i:s')]);
            giftcard_helper_log_transaction($cardId, 'Admin Creation', $value, 'Card generated by admin.');
        }
    }
    header("Location: " . $modulelink . "&generatesuccess=1");
    exit;
}

if ($action === 'save_card' && $_SERVER['REQUEST_METHOD'] === 'POST') {
    $cardId = (int)$_POST['card_id'];
    $originalCard = Capsule::table('mod_giftcards')->find($cardId);
    $balance = (float)$_POST['current_balance'];
    $status = $_POST['status'];
    $rawDate = trim($_POST['expiry_date']);
    $expiry = !empty($rawDate) ? date('Y-m-d', strtotime($rawDate)) : null;
    Capsule::table('mod_giftcards')->where('id', $cardId)->update(['current_balance' => $balance, 'status' => $status, 'expiry_date' => $expiry, 'updated_at' => date('Y-m-d H:i:s')]);
    giftcard_helper_log_transaction($cardId, 'Admin Edit', 0, "Admin edited card. Status: {$originalCard->status} -> {$status}. Balance: {$originalCard->current_balance} -> {$balance}.");
    header("Location: " . $modulelink . "&savesuccess=1");
    exit;
}

if ($action === 'delete' && isset($_GET['id'])) {
    $cardId = (int)$_GET['id'];
    Capsule::table('mod_giftcards')->where('id', $cardId)->delete();
    Capsule::table('mod_giftcard_logs')->where('card_id', $cardId)->delete();
    header("Location: " . $modulelink . "&deletesuccess=1");
    exit;
}

header("Location: " . $modulelink);
exit;

if ($action === 'save_card' && $_SERVER['REQUEST_METHOD'] === 'POST') {
    $cardId = (int)$_POST['card_id'];
    $originalCard = Capsule::table('mod_giftcards')->find($cardId);
    $balance = (float)$_POST['current_balance'];
    $status = $_POST['status'];
    $rawDate = trim($_POST['expiry_date']);
    $expiry = !empty($rawDate) ? date('Y-m-d', strtotime($rawDate)) : null;
    Capsule::table('mod_giftcards')->where('id', $cardId)->update(['current_balance' => $balance, 'status' => $status, 'expiry_date' => $expiry, 'updated_at' => date('Y-m-d H:i:s')]);
    giftcard_helper_log_transaction($cardId, 'Admin Edit', 0, "Admin edited card. Status: {$originalCard->status} -> {$status}. Balance: {$originalCard->current_balance} -> {$balance}.");
    header("Location: " . $modulelink . "&savesuccess=1");
    exit;
}

if ($action === 'delete' && isset($_GET['id'])) {
    $cardId = (int)$_GET['id'];
    Capsule::table('mod_giftcards')->where('id', $cardId)->delete();
    Capsule::table('mod_giftcard_logs')->where('card_id', $cardId)->delete();
    header("Location: " . $modulelink . "&deletesuccess=1");
    exit;
}

header("Location: " . $modulelink);
exit;